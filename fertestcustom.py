{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"fertestcustom.py","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"KJt12O5mORNf","colab_type":"code","colab":{}},"source":["# load json and create model\n","from __future__ import division\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.models import model_from_json\n","import numpy\n","import os\n","import numpy as np\n","import cv2\n","from keras.models import model_from_json\n","from matplotlib import pyplot as plt\n","\n","#loading the model\n","json_file = open(root_path + 'fer.json', 'r')\n","# json_file = open('fer.json', 'r')\n","loaded_model_json = json_file.read()\n","json_file.close()\n","loaded_model = model_from_json(loaded_model_json)\n","# load weights into new model\n","loaded_model.load_weights(root_path + \"fer.h5\")\n","print(\"Loaded model from disk\")\n","\n","#setting image resizing parameters\n","WIDTH = 48\n","HEIGHT = 48\n","x=None\n","y=None\n","labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']\n","\n","#loading image\n","im = Image.open(root_path + \"surprise.jpg\")\n","full_size_image = cv2.imread(\"im\")\n","print(\"Image Loaded\")\n","im = np.asarray(im)\n","gray = cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)\n","face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\n","eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')\n","faces = face_cascade.detectMultiScale(gray, 1.3, 5)\n","\n","#detecting faces\n","for (x, y, w, h) in faces:\n","        roi_gray = gray[y:y + h, x:x + w]\n","        cropped_img = np.expand_dims(np.expand_dims(cv2.resize(roi_gray, (48, 48)), -1), 0)\n","        cv2.normalize(cropped_img, cropped_img, alpha=0, beta=1, norm_type=cv2.NORM_L2, dtype=cv2.CV_32F)\n","        cv2.rectangle(full_size_image, (x, y), (x + w, y + h), (0, 255, 0), 1)\n","        #predicting the emotion\n","        yhat= loaded_model.predict(cropped_img)\n","        cv2.putText(full_size_image, labels[int(np.argmax(yhat))], (x, y), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 1, cv2.LINE_AA)\n","        print(\"Emotion: \"+labels[int(np.argmax(yhat))])\n","\n","cv2.imshow('Emotion', full_size_image)\n","cv2.waitKey()"],"execution_count":0,"outputs":[]}]}